@model Post

<div class="container my-4">
    <div class="row">
        <div class="col-12 col-lg-8">
            <div class="card shadow-sm border-0 mb-4">
                <div class="card-body">
                    <h1 class="h4 mb-3">@Model.Title</h1>
                    <small class="text-muted d-block mb-2">üëÅÔ∏è @Model.ViewCount g√∂r√ºnt√ºlenme</small>

                    <div class="mb-3">
                        @foreach (var tag in Model.Tags)
                        {
                        <a asp-controller="Posts"
                           asp-action="Tag"
                           asp-route-id="@tag.TagId"
                           class="badge bg-@tag.Color bg-opacity-10 text-@tag.Color fw-bold me-1 mb-1">
                            @tag.Text
                        </a>
                        }
                    </div>

                    @if (!string.IsNullOrEmpty(Model.Image))
                    {
                    <img src="@Model.Image" class="img-fluid rounded mb-3 w-100" alt="Post g√∂rseli" />
                    }

                    <div class="text-body">@Model.Content</div>
                </div>
            </div>

            <div class="card shadow-sm border-0">
                <div class="card-body">
                    <h5 class="mb-4">
                        <span id="commentCount">@Model.Comments.Count() adet yorum var</span>
                    </h5>

                    <div id="comments">
                        @foreach (var comment in Model.Comments)
    {
                        <div class="my-4 d-flex flex-wrap align-items-start">
                            <img src="@comment.User.Image"
                                 class="avatar rounded-circle me-3 mb-2"
                                 style="width: 48px; height: 48px; object-fit: cover;"
                                 alt="Kullanƒ±cƒ± resmi" />
                            <div>
                                <h6 class="mb-0">@comment.User.UserName</h6>
                                <small class="text-muted">@comment.PublishedOn.ToString("g")</small>
                                <p class="mb-1">@comment.Text</p>

                                <div class="d-flex gap-2 mt-1">
                                    <button class="btn btn-outline-success btn-sm like-btn" data-id="@comment.CommentId">
                                        üëç <span class="like-count">@comment.LikeCount</span>
                                    </button>
                                    <button class="btn btn-outline-danger btn-sm dislike-btn" data-id="@comment.CommentId">
                                        üëé <span class="dislike-count">@comment.DislikeCount</span>
                                    </button>
                                </div>
                            </div>
                        </div>
    }
                    </div>


                    @if (User.Identity!.IsAuthenticated)
                    {
                    <hr class="my-4" />
                    <h5 class="mb-3">üí¨ Yorum Ekle</h5>

                    <form id="commentForm">
                        <input type="hidden" id="PostId" name="PostId" value="@Model.PostId" />

                        <div class="mb-3">
                            <label for="Text" class="form-label">Yorum</label>
                            <textarea name="Text" id="Text" class="form-control" rows="3" placeholder="Yorumunuzu yazƒ±n..."></textarea>
                        </div>

                        <div class="d-grid d-md-block">
                            <button type="submit" id="btnYorumKayit" class="btn btn-primary">G√∂nder</button>
                        </div>
                    </form>
                    }
                    else
                    {
                    <p class="mt-3">Yorum yapabilmek i√ßin <a href="/users/login">giri≈ü yapmalƒ±sƒ±nƒ±z</a>.</p>
                    }
                </div>
            </div>
        </div>

        <div class="col-12 col-lg-4 mt-4 mt-lg-0">
            <div id="floatingSidebar">
                <vc:tags-menu></vc:tags-menu>
                <vc:new-posts></vc:new-posts>
                <vc:new-comments></vc:new-comments>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const form = document.getElementById("commentForm");

            form?.addEventListener("submit", async (e) => {
                e.preventDefault();

                const postId = document.getElementById("PostId").value;
                const text = document.getElementById("Text").value;

                try {
                    const response = await fetch('@Url.Action("AddComment", "Posts")', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ PostId: parseInt(postId), Text: text })
                    });

                    if (!response.ok) throw new Error("Yorum g√∂nderilemedi.");

                    const yorum = await response.json();
                    const date = new Date(yorum.publishedOn);

                    const html = `
                        <div class="my-4 d-flex flex-wrap align-items-start">
                            <img src="${yorum.avatar}" class="avatar rounded-circle me-3 mb-2" style="width: 48px; height: 48px;" alt="Kullanƒ±cƒ± resmi">
                            <div>
                                <h6 class="mb-0">${yorum.username}</h6>
                                <small class="text-muted">${date.toLocaleDateString()}</small>
                                <p class="mb-1">${yorum.Text}</p>
                                <div class="d-flex gap-2 mt-1">
                                    <button class="btn btn-outline-success btn-sm like-btn" data-id="${yorum.commentId ?? 0}">
                                        üëç <span class="like-count">0</span>
                                    </button>
                                    <button class="btn btn-outline-danger btn-sm dislike-btn" data-id="${yorum.commentId ?? 0}">
                                        üëé <span class="dislike-count">0</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    `;

                    document.getElementById("comments").insertAdjacentHTML("beforeend", html);
                    document.getElementById("Text").value = '';
                    let countText = document.getElementById("commentCount").innerText;
                    let count = parseInt(countText) || 0;
                    document.getElementById("commentCount").innerText = (count + 1) + " adet yorum var";

                } catch (err) {
                    alert("Yorum g√∂nderilirken hata olu≈ütu.");
                    console.error(err);
                }
            });

            document.addEventListener("click", async (e) => {
                const likeBtn = e.target.closest(".like-btn");
                const dislikeBtn = e.target.closest(".dislike-btn");

                if (likeBtn) {
                    const id = parseInt(likeBtn.dataset.id);
                    const response = await fetch("/Posts/LikeComment", {
                        method: "POST",
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(id)
                    });

                    const result = await response.json();
                    if (result.success) {
                        likeBtn.querySelector(".like-count").textContent = result.likeCount;
                    } else if (result.message) {
                        alert(result.message);
                    }
                }

                if (dislikeBtn) {
                    const id = parseInt(dislikeBtn.dataset.id);
                    const response = await fetch("/Posts/DislikeComment", {
                        method: "POST",
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(id)
                    });

                    const result = await response.json();
                    if (result.success) {
                        dislikeBtn.querySelector(".dislike-count").textContent = result.dislikeCount;
                    } else if (result.message) {
                        alert(result.message);
                    }
                }
            });
        });
    </script>
}






